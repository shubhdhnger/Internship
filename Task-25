task - 25
Implement a banking system where multiple threads withdraw money from a shared account, ensuring that withdrawal does not exceed balance.
class BankAccount {
    private int balance;

    public BankAccount(int balance) {
        this.balance = balance;
    }

    public synchronized boolean withdraw(int amount, String name) {
        if (balance >= amount) {
            System.out.println(name + " is withdrawing " + amount);
            balance -= amount;
            System.out.println("Remaining balance: " + balance);
            return true;
        } else {
            System.out.println(name + " attempted to withdraw " + amount + " but insufficient funds.");
            return false;
        }
    }
}

class Customer extends Thread {
    private BankAccount account;
    private int amount;

    public Customer(BankAccount account, int amount, String name) {
        super(name);
        this.account = account;
        this.amount = amount;
    }

    @Override
    public void run() {
        account.withdraw(amount, getName());
    }
}

public class BankingSystem {
    public static void main(String[] args) {
        BankAccount account = new BankAccount(100);

        Thread t1 = new Customer(account, 50, "Alice");
        Thread t2 = new Customer(account, 30, "Bob");
        Thread t3 = new Customer(account, 40, "Charlie");

        t1.start();
        t2.start();
        t3.start();
    }
}





